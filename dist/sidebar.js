document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("close-sidebar"),t=document.querySelectorAll(".tab-button"),n=document.querySelectorAll(".tab-panel"),a=document.getElementById("upload-dropzone"),o=document.getElementById("file-input"),i=document.getElementById("upload-button"),s=document.getElementById("uploaded-files"),l=document.getElementById("braindump-input"),r=document.getElementById("analyze-button"),d=document.getElementById("regenerate-outline"),c=document.getElementById("apply-outline"),u=document.getElementById("outline-container");let m="upload";function p(e){m=e,t.forEach((t=>{t.dataset.tab===e?t.classList.add("active"):t.classList.remove("active")})),n.forEach((t=>{t.id===e?(t.classList.add("active"),t.style.display="block"):(t.classList.remove("active"),t.style.display="none")})),window.parent.postMessage({action:"tabChanged",tab:e},"*"),"braindump"===e&&y(l.value)}function g(e){Array.from(e).forEach((e=>{const t=document.createElement("div");t.className="file-item",t.innerHTML=`\n        <span class="file-icon">ðŸ“„</span>\n        <span class="file-name">${e.name}</span>\n      `,s.appendChild(t)})),window.parent.postMessage({action:"uploadFiles",data:{files:Array.from(e)}},"*")}function y(e){const t=e.trim().split(/\s+/).length,n=Math.ceil(t/200),a=function(e){const t=e.trim().split(/\s+/),n=e.split(/[.!?]+/).filter((e=>e.trim().length>0)),a=function(e){const t=e.trim().toLowerCase().split(/\s+/);let n=0;return t.forEach((e=>{(e=e.replace(/[^a-z]/g,"")).length<=3?n+=1:n+=e.replace(/[^aeiouy]+/g," ").trim().split(/\s+/).length})),n}(e),o=.39*(t.length/n.length)+11.8*(a/t.length)-15.59;return Math.round(o)}(e),o=function(e){const t=e.trim().split(/\s+/),n=e.split(/[.!?]+/).filter((e=>e.trim().length>0)),a=t.reduce(((e,t)=>e+t.length),0)/t.length,o=t.length/n.length;return a>5&&o>20?"Academic":a<4&&o<15?"Conversational":"Balanced"}(e);document.getElementById("word-count").textContent=t,document.getElementById("reading-time").textContent=`${n} min`,document.getElementById("grade-level").textContent=a,document.getElementById("writing-style").textContent=o,function(e){const t=e.trim().split(/\s+/).slice(-10);if(new Set(t).size<5)return!0;const n=localStorage.getItem("lastWritingUpdate");return!!(n&&Date.now()-n>3e4)}(e)&&function(){const e=document.getElementById("prompts-container");e.innerHTML="",["What is the main point you want to convey?","How does this connect to your previous ideas?","Can you provide an example to illustrate this?","What would someone who disagrees with you say?","How does this relate to your overall topic?"].forEach((t=>{const n=document.createElement("div");n.className="prompt",n.textContent=t,n.onclick=()=>{const e=document.getElementById("braindump-input");e.value+="\n\n"+t,e.focus()},e.appendChild(n)}))}()}e.addEventListener("click",(()=>{window.parent.postMessage({action:"closeSidebar"},"*")})),t.forEach((e=>{e.addEventListener("click",(()=>{p(e.dataset.tab)}))})),window.addEventListener("message",(e=>{const{action:t,tab:n}=e.data;"switchTab"===t&&n&&p(n)})),p(m),i.addEventListener("click",(()=>{o.click()})),o.addEventListener("change",(e=>{g(e.target.files)})),a.addEventListener("dragover",(e=>{e.preventDefault(),a.classList.add("drag-over")})),a.addEventListener("dragleave",(()=>{a.classList.remove("drag-over")})),a.addEventListener("drop",(e=>{e.preventDefault(),a.classList.remove("drag-over"),g(e.dataTransfer.files)})),r.addEventListener("click",(async()=>{const e=l.value.trim();if(e)try{const t=await async function(){return new Promise((e=>{window.parent.postMessage({action:"getCursorPosition"},"*");const t=n=>{"cursorPosition"===n.data.action&&(window.removeEventListener("message",t),e(n.data.position))};window.addEventListener("message",t)}))}(),n=await fetch("http://localhost:5001/api/generate-outline",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},mode:"cors",credentials:"omit",body:JSON.stringify({text:e,cursor_position:t})});if(!n.ok)throw new Error("Failed to generate outline");const a=await n.json();!function(e){if(!e||!e.sections)return void(u.innerHTML='<p class="error">Failed to generate outline. Please try again.</p>');let t='\n      <div class="outline-sections">\n    ';e.sections.forEach(((e,n)=>{t+=`\n        <div class="outline-section">\n          <h3>${n+1}. ${e.title}</h3>\n          <ul>\n            ${e.key_points.map((e=>`<li>${e}</li>`)).join("")}\n          </ul>\n          ${e.suggested_length?`<p class="suggested-length">Suggested length: ~${e.suggested_length} words</p>`:""}\n        </div>\n      `})),t+="</div>",u.innerHTML=t}(a.outline),p("outline"),window.parent.postMessage({action:"applyOutline",data:{outline:a.outline,cursor_position:t}},"*")}catch(e){console.error("Error generating outline:",e),alert("Failed to generate outline. Please check your API key and try again.")}})),d.addEventListener("click",(()=>{r.click()})),c.addEventListener("click",(()=>{const e=Array.from(u.children).map((e=>e.textContent.replace(/^\d+\.\s/,"")));window.parent.postMessage({action:"applyOutline",data:{outline:e}},"*")})),document.getElementById("braindump-input").addEventListener("input",(e=>{y(e.target.value),localStorage.setItem("lastWritingUpdate",Date.now())})),document.querySelectorAll(".tab-button").forEach((e=>{e.addEventListener("click",(()=>{"braindump"===e.dataset.tab&&y(document.getElementById("braindump-input").value)}))}))}));