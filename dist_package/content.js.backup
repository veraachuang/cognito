(()=>{console.log("[Cognito] Content script initialized");let e=null,o=!1;function t(){const e=location.pathname.match(/\/document\/(?:u\/\d+\/)?d\/([^/]+)/)||location.pathname.match(/\/d\/([^/]+)/);return e&&e[1]||new URLSearchParams(location.search).get("id")||null}function n(e){navigator.clipboard&&navigator.clipboard.writeText?navigator.clipboard.writeText(e).then((()=>{console.log("[Cognito] Text copied to clipboard using Clipboard API"),c("Outline copied to clipboard. Press Ctrl+V or Cmd+V to paste.")})).catch((o=>{console.error("[Cognito] Clipboard API failed:",o),i(e)})):i(e)}function i(e){const o=document.createElement("textarea");o.value=e,o.style.position="fixed",o.style.left="-9999px",o.style.top="0",o.setAttribute("readonly",""),document.body.appendChild(o);try{if(o.focus(),o.select(),!document.execCommand("copy"))throw new Error("execCommand copy failed");console.log("[Cognito] Text copied to clipboard using execCommand"),c("Outline copied to clipboard. Press Ctrl+V or Cmd+V to paste.")}catch(o){console.error("[Cognito] Could not copy text:",o),alert("Failed to copy to clipboard. Your outline is:\n\n"+e.substring(0,100)+"...")}document.body.removeChild(o)}function r(e,o=0){let t="";const n="  ".repeat(o);return e.querySelectorAll(":scope > li").forEach((e=>{let i=3===e.childNodes[0].nodeType?e.childNodes[0].textContent.trim():Array.from(e.childNodes).filter((e=>3===e.nodeType)).map((e=>e.textContent.trim())).join(" ");!i&&e.firstChild&&3!==e.firstChild.nodeType&&(i=e.firstChild.textContent.trim()),t+=`${n}â€¢ ${i}\n`,e.querySelectorAll(":scope > ul").forEach((e=>{t+=r(e,o+1)}))})),t}function c(e,o=3e3){document.querySelector(".cognito-toast")?.remove();const t=document.createElement("div");return t.className="cognito-toast",t.textContent=e,t.style.cssText="\n    position: fixed;\n    bottom: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: #333;\n    color: white;\n    padding: 10px 20px;\n    border-radius: 4px;\n    z-index: 10000;\n    font-family: 'Google Sans', Arial, sans-serif;\n  ",document.body.appendChild(t),o!==1/0&&setTimeout((()=>{t.style.opacity=0,t.style.transition="opacity 0.5s ease",setTimeout((()=>t.remove()),500)}),o),t}function s(t=null){e||e||(e=document.createElement("iframe"),e.src=chrome.runtime.getURL("frontend/sidebar.html"),e.id="cognito-sidebar",e.style.cssText="\n    position: fixed; top: 0; right: -350px;\n    width: 350px; height: 100vh;\n    border: none; z-index: 9999;\n    transition: right 0.3s ease;\n  ",document.body.appendChild(e)),o=!o,e.style.right=o?"0":"-350px",[".docs-editor-container",".docs-editor",".docs-content-wrapper"].map((e=>document.querySelector(e))).forEach((e=>{e&&(e.style.width=o?"calc(100% - 350px)":"100%",e.style.transition="width 0.3s ease")})),t&&o&&setTimeout((()=>{e?.contentWindow?.postMessage({action:"switchTab",tab:t},"*")}),300)}window.addEventListener("message",(o=>{"sidebarReady"===o.data?.action&&e?.contentWindow&&e.contentWindow.postMessage({action:"docId",value:t()},"*"),"applyOutline"===o.data?.action&&o.source===e?.contentWindow&&function(e){const o=t();if(!o)return void alert("Could not determine Google Doc ID. Please make sure you are in a Google Doc.");const i=document.createElement("div");i.innerHTML=e;let s=function(e){let o="";o+="GENERATED OUTLINE\n\n";const t=e.querySelectorAll("h2, h3, h4, h5"),n=e.querySelectorAll("ul");return t.length>0?t.forEach((e=>{const t=parseInt(e.tagName.substring(1))-2,n="  ".repeat(Math.max(0,t));o+=`${n}${e.textContent.toUpperCase()}\n`;let i=e.nextElementSibling;for(;i&&!["H2","H3","H4","H5"].includes(i.tagName);)"UL"===i.tagName?(o+=r(i,t+1),o+="\n"):"P"===i.tagName&&(o+=`${n}  ${i.textContent}\n`),i=i.nextElementSibling;o+="\n"})):n.length>0&&n.forEach((e=>{o+=r(e,0),o+="\n"})),o}(i);const l=c("Inserting outline via Google Docs API...",6e4);chrome.runtime.sendMessage({action:"insertOutlineWithAPI",docId:o,content:s},(e=>{if(l?.remove(),e&&e.success)c("Outline applied to document successfully!");else if(e&&e.shouldUseBrowserFallback)c("Using browser-based insertion as fallback...",3e3),setTimeout((()=>{var o;o=e.content,console.log("[Cognito] Using browser-based insertion fallback"),Promise.resolve().then((()=>function(e){return new Promise(((o,t)=>{console.log("[Cognito] Attempting internal insertion method");const n=[".kix-appview-editor",".docs-texteventtarget-iframe",".docs-editor-container"];let i=null;for(const e of n)if(i=document.querySelector(e),i){console.log(`[Cognito] Found editor element using selector: ${e}`);break}if(!i)return console.error("[Cognito] Could not find any Google Docs editor element"),t(new Error("Could not find Google Docs editor"));try{i.focus(),console.log("[Cognito] Editor focused")}catch(e){console.error("[Cognito] Error focusing editor:",e)}const r=[".kix-page",".kix-page-content-wrapper",".docs-texteventtarget-iframe"];let s=null;for(const e of r)if(s=document.querySelector(e),s){console.log(`[Cognito] Found content area using selector: ${e}`);break}if(s)try{const n=new MouseEvent("mousedown",{bubbles:!0,cancelable:!0,view:window});s.dispatchEvent(n),console.log("[Cognito] Clicked on content area"),setTimeout((()=>{try{document.execCommand("insertText",!1,e)?(console.log("[Cognito] Successfully inserted text via execCommand"),c("Outline successfully inserted into document!"),o()):t(new Error("ExecCommand insertion failed"))}catch(e){t(new Error("ExecCommand error: "+e.message))}}),200)}catch(e){t(new Error("Error dispatching click event: "+e.message))}else try{const n=new MouseEvent("mousedown",{bubbles:!0,cancelable:!0,view:window});i.dispatchEvent(n),console.log("[Cognito] Clicked on editor element"),setTimeout((()=>{try{document.execCommand("insertText",!1,e)?(console.log("[Cognito] Successfully inserted text via execCommand"),c("Outline successfully inserted into document!"),o()):t(new Error("ExecCommand insertion failed"))}catch(e){t(new Error("ExecCommand error: "+e.message))}}),200)}catch(e){t(new Error("Error clicking editor: "+e.message))}}))}(o).catch((e=>{throw console.error("[Cognito] First insertion method failed:",e),e})))).catch((()=>function(e){return new Promise(((o,t)=>{console.log("[Cognito] Attempting keyboard simulation method");const n=[".kix-canvas-tile-content",".kix-document-top",".docs-editor-container"];let i=null;for(const e of n)if(i=document.querySelector(e),i){console.log(`[Cognito] Found canvas using selector: ${e}`);break}if(!i)return t(new Error("Could not find Google Docs canvas"));const r=[document.querySelector(".docs-editor-container"),document.querySelector(".docs-texteventtarget-iframe"),document.querySelector(".kix-appview-editor"),document.body];for(const e of r)if(e)try{e.focus(),console.log("[Cognito] Focused element:",e);break}catch(e){console.warn("[Cognito] Failed to focus element:",e)}try{const n=i.getBoundingClientRect(),r=new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window,clientX:n.left+Math.min(50,n.width/2),clientY:n.top+Math.min(50,n.height/2)});i.dispatchEvent(r),console.log("[Cognito] Clicked on canvas at position:",r.clientX,r.clientY),setTimeout((()=>{navigator.clipboard.writeText(e).then((()=>{console.log("[Cognito] Content copied to clipboard");const e=navigator.platform.toUpperCase().indexOf("MAC")>=0,t=new KeyboardEvent("keydown",{bubbles:!0,cancelable:!0,keyCode:86,which:86,key:"v",code:"KeyV",ctrlKey:!e,metaKey:e});let n=!1;const r=[document.activeElement,i,document.querySelector(".docs-texteventtarget-iframe"),document.body];for(const e of r)if(e)try{e.dispatchEvent(t),n=!0,console.log("[Cognito] Dispatched paste event to:",e);break}catch(e){console.warn("[Cognito] Failed to dispatch event to target:",e)}if(!n)throw new Error("Could not dispatch paste event to any target");c("Attempted to paste outline into document. If not visible, please press Ctrl+V or Cmd+V."),o()})).catch((e=>{t(new Error("Clipboard write failed: "+e))}))}),300)}catch(e){t(new Error("Error simulating click: "+e.message))}}))}(o).catch((e=>{throw console.error("[Cognito] Second insertion method failed:",e),e})))).catch((()=>{console.log("[Cognito] All insertion methods failed, copying to clipboard"),n(o),c("Could not auto-insert the outline. Content has been copied to your clipboard - please paste with Ctrl+V or Cmd+V.",6e3)}))}),500);else{const o=e?.error||"Unknown error";console.error("[Cognito] Error applying outline:",o),c(`Error: ${o}`,5e3),e?.content&&setTimeout((()=>{confirm("Failed to insert outline using the API. Would you like to copy it to clipboard instead?")&&n(e.content)}),1e3)}}))}(o.data.outline)})),chrome.runtime.onMessage.addListener(((e,o,t)=>("toggleSidebar"===e.action?(s(e.tab),t({success:!0})):t({success:!1,error:"Unknown action"}),!0))),window.addEventListener("message",(o=>{o.source===e?.contentWindow&&"closeSidebar"===o.data?.action&&s()}))})();