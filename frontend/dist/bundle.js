document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("close-sidebar"),t=document.querySelectorAll(".tab-button"),n=document.querySelectorAll(".tab-panel"),i=document.getElementById("upload-dropzone"),a=document.getElementById("file-input"),o=document.getElementById("upload-button"),l=document.getElementById("uploaded-files"),s=document.getElementById("braindump-input"),r=document.getElementById("analyze-button"),d=document.getElementById("regenerate-outline"),c=document.getElementById("apply-outline"),u=document.getElementById("outline-container");function m(e){t.forEach((t=>{t.classList.toggle("active",t.dataset.tab===e)})),n.forEach((t=>{t.classList.toggle("active",t.id===e)}))}function g(e){Array.from(e).forEach((e=>{const t=document.createElement("div");t.className="file-item",t.innerHTML=`\n        <span class="file-icon">ðŸ“„</span>\n        <span class="file-name">${e.name}</span>\n      `,l.appendChild(t)})),window.parent.postMessage({action:"uploadFiles",data:{files:Array.from(e)}},"*")}function p(e){const t=e.trim().split(/\s+/).length,n=Math.ceil(t/200),i=function(e){const t=e.trim().split(/\s+/),n=e.split(/[.!?]+/).filter((e=>e.trim().length>0)),i=function(e){const t=e.trim().toLowerCase().split(/\s+/);let n=0;return t.forEach((e=>{(e=e.replace(/[^a-z]/g,"")).length<=3?n+=1:n+=e.replace(/[^aeiouy]+/g," ").trim().split(/\s+/).length})),n}(e),a=.39*(t.length/n.length)+11.8*(i/t.length)-15.59;return Math.round(a)}(e),a=function(e){const t=e.trim().split(/\s+/),n=e.split(/[.!?]+/).filter((e=>e.trim().length>0)),i=t.reduce(((e,t)=>e+t.length),0)/t.length,a=t.length/n.length;return i>5&&a>20?"Academic":i<4&&a<15?"Conversational":"Balanced"}(e);document.getElementById("word-count").textContent=t,document.getElementById("reading-time").textContent=`${n} min`,document.getElementById("grade-level").textContent=i,document.getElementById("writing-style").textContent=a,function(e){const t=e.trim().split(/\s+/).slice(-10);if(new Set(t).size<5)return!0;const n=localStorage.getItem("lastWritingUpdate");return!!(n&&Date.now()-n>3e4)}(e)&&function(){const e=document.getElementById("prompts-container");e.innerHTML="",["What is the main point you want to convey?","How does this connect to your previous ideas?","Can you provide an example to illustrate this?","What would someone who disagrees with you say?","How does this relate to your overall topic?"].forEach((t=>{const n=document.createElement("div");n.className="prompt",n.textContent=t,n.onclick=()=>{const e=document.getElementById("braindump-input");e.value+="\n\n"+t,e.focus()},e.appendChild(n)}))}()}e.addEventListener("click",(()=>{window.parent.postMessage({action:"closeSidebar"},"*")})),t.forEach((e=>{e.addEventListener("click",(()=>{m(e.dataset.tab)}))})),o.addEventListener("click",(()=>{a.click()})),a.addEventListener("change",(e=>{g(e.target.files)})),i.addEventListener("dragover",(e=>{e.preventDefault(),i.classList.add("drag-over")})),i.addEventListener("dragleave",(()=>{i.classList.remove("drag-over")})),i.addEventListener("drop",(e=>{e.preventDefault(),i.classList.remove("drag-over"),g(e.dataTransfer.files)})),r.addEventListener("click",(async()=>{const e=s.value.trim();if(e)try{const t=await fetch("http://localhost:5000/api/generate-outline",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text:e})});!function(e){let t=`\n      <h2>${e.title}</h2>\n      \n      <div class="outline-sections">\n    `;e.sections.forEach((e=>{t+=`\n        <div class="outline-section">\n          <h3>${e.title}</h3>\n          <ul>\n            ${e.key_points.map((e=>`<li>${e}</li>`)).join("")}\n          </ul>\n          <p class="suggested-length">Suggested length: ~${e.suggested_length} words</p>\n        </div>\n      `})),t+=`\n      <div class="writing-recommendations">\n        <h3>Writing Recommendations</h3>\n        <ul>\n          <li>${e.structure_recommendations.paragraph_distribution}</li>\n          <li>${e.structure_recommendations.sentence_variety}</li>\n          ${e.structure_recommendations.transitions_needed?"<li>Consider adding more transition words between paragraphs</li>":""}\n          <li>Recommended average sentence length: ${Math.round(e.writing_style.sentence_length)} words</li>\n          <li>Suggested tense: ${e.writing_style.recommended_tense}</li>\n        </ul>\n      </div>\n    `,t+="</div>",u.innerHTML=t}((await t.json()).outline),m("outline")}catch(e){console.error("Error generating outline:",e),alert("Failed to generate outline. Please try again.")}})),d.addEventListener("click",(()=>{r.click()})),c.addEventListener("click",(()=>{const e=Array.from(u.children).map((e=>e.textContent.replace(/^\d+\.\s/,"")));window.parent.postMessage({action:"applyOutline",data:{outline:e}},"*")})),window.addEventListener("message",(e=>{const{action:t,tab:n}=e.data;"switchTab"===t&&n&&m(n)})),document.getElementById("braindump-input").addEventListener("input",(e=>{p(e.target.value),localStorage.setItem("lastWritingUpdate",Date.now())})),document.querySelectorAll(".tab-button").forEach((e=>{e.addEventListener("click",(()=>{"braindump"===e.dataset.tab&&p(document.getElementById("braindump-input").value)}))}))}));